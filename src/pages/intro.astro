---
const Sessel = '/Sessel.jpg'
import Nachttische from '/Nachttische.png'
---
  <div
  class="relative mx-12 flex flex-col items-center justify-center gap-12 xl:flex-row xl:gap-36" id="intro"
>
  <div class="w-full xl:w-1/2">
    <h1 class="text-xl">
      Herzlich willkommen auf der Webseite von <span id="scribble" class="font-bold"
        >SchnitzStück!</span
      >
    </h1>

    <div class="relative mt-5 mb-5">
      <svg class="absolute h-full w-full overflow-visible">
        <defs>
          <linearGradient id="gradient" x1="0%" y1="0%" x2="100%" y2="0%">
            <stop offset="0%" style={{ stopColor: "#DC3A2B", stopOpacity: 1 }}
            ></stop>
            <stop offset="100%" style={{ stopColor: "#E18510", stopOpacity: 1 }}
            ></stop>
          </linearGradient>
        </defs>
        <path
          id="border-path"
          fill="none"
          stroke="url(#gradient)"
          stroke-width="4"
          stroke-linecap="round">
        </path>
      </svg>
      <p id="anim-p" class="p-6 text-lg">
         Schön, dass Sie hierher gefunden haben! Diese Webseite ist momentan noch under construction. Als transparentes Unternehmen lassen wir uns jedoch in die Karten blicken und beim Konstruktionsprozess zusehen. Deshalb ist diese Seite bereits under <a href="www.SchnitzStück.de", class=" font-bold ">SchnitzStück.de</a> zu finden. Vielleicht interessiert es ja den ein oder anderen :) <br> Da wir uns der OpenSource community verpflichtet fühlen, ist der gesamte code für die Webseite auf <a href="https://github.com/PJET2000/schnitzst-ck.github.io", class="font-bold">Github</a> zu finden. <br> Für ALLE Fragen sind wir bereits erreichbar unter: <a href="mailto:info@schnitztück.de", class="font-bold">info@schnitztück.de</a>
    </p>
    </div>
    <div
      class="flex justify-center pt-12 text-center text-main text-content xl:gap-16"
    >
      <div class="w-32">
        <h2>Gebaute Möbel</h2>
        <p id="Möbel-counter" class="text-xl font-bold">8</p>
      </div>
      <div class="w-32">
        <h2>Geschnitze Figuren</h2>
        <p id="Figuren-counter" class="text-xl font-bold">15</p>
      </div>
      <div class="w-32">
        <h2>Grandiose Ideen<blockquote></blockquote></h2>
        <p id="Ideen-counter" class="text-bold text-xl font-bold">infiniyty</p>
      </div>
    </div>
  </div>

  <div class="relative">
    <img class="h-full" src={Sessel} alt="Hua's portrait" />
      </div>
</div>
<div class="mt-12 h-6 w-full bg-black"></div>

<style>
  #border-path {
    animation: draw 1s forwards 1s ease-out;
  }

  @keyframes draw {
    to {
      stroke-dashoffset: 0;
    }
  }
</style>

<script>
  function updatePath() {
    const textMain = document.querySelector("#anim-p") as HTMLElement
    const path = document.querySelector("#border-path") as SVGPathElement

    if (textMain && path) {
      path.setAttribute(
        "d",
        `M0,0 V${textMain.offsetHeight} H${textMain.offsetWidth} v${
          textMain.offsetHeight / 2
        }`
      )
      const pathLength = path.getTotalLength()

      path.style.strokeDasharray = pathLength.toString()
      path.style.strokeDashoffset = pathLength.toString()
    }
  }

  //Increment
  function incrementCounter(
    selector: string,
    current: number,
    target: number,
    duration: number,
    letter: string = ""
  ) {
    let counter = document.getElementById(selector)
    let stepTime = Math.abs(Math.floor(duration / target))
    if (current < target && counter) {
      current++
      counter.innerText = current.toString() + letter
      setTimeout(
        () => incrementCounter(selector, current, target, duration, letter),
        stepTime
      )
    }
  }
  incrementCounter("Möbel-counter", 0, 8 , 1000)
  incrementCounter("Figuren-counter", 0, 15, 1000)
  incrementCounter("Ideen-counter", 0, Infinity, 1000)

  // Update the path when the page loads
  window.addEventListener("DOMContentLoaded", updatePath)
  // Update the path when the window is resized
  window.addEventListener("resize", updatePath)
</script>

